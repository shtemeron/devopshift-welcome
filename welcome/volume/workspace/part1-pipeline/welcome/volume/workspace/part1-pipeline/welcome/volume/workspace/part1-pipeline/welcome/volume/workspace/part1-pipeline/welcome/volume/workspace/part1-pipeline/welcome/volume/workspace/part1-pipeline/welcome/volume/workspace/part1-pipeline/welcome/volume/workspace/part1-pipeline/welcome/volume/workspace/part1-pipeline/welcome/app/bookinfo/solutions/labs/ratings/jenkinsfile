pipeline {
    agent any

    environment {
        IMAGE_NAME = 'my-node-service'
        VERSION = "v${env.BUILD_NUMBER}"
        REPO = 'my-docker-repo'
        CREDENTIALS_ID = 'docker-credentials'
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://your-git-repo-url.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'docker build --target build --tag ${IMAGE_NAME}:${VERSION}-build .'
                }
            }
        }

        stage('Lint/Test') {
            steps {
                script {
                    sh 'docker build --target lint-test --tag ${IMAGE_NAME}:${VERSION}-lint-test .'
                    sh 'docker run --rm ${IMAGE_NAME}:${VERSION}-lint-test'
                }
            }
        }

        stage('Run') {
            steps {
                script {
                    sh 'docker build --target run --tag ${IMAGE_NAME}:${VERSION} .'
                }
            }
        }

        stage('Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${CREDENTIALS_ID}") {
                        sh 'docker push ${REPO}/${IMAGE_NAME}:${VERSION}'
                        sh 'docker tag ${REPO}/${IMAGE_NAME}:${VERSION} ${REPO}/${IMAGE_NAME}:latest'
                        sh 'docker push ${REPO}/${IMAGE_NAME}:latest'
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Docker image build, lint/test, and push successful!'
        }
        failure {
            echo 'Docker image build, lint/test, or push failed.'
        }
    }
}
